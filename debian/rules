#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
#
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.
#
# Modified to make a template file for a multi-binary package with separated
# build-arch and build-indep targets  by Bill Allombert 2001

# Honor db rules file

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# This has to be exported to make some magic below work.
export DH_OPTIONS

CONFIGURE_VARS = CC=gcc CFLAGS="$(CFLAGS)" CXX=g++ CXXFLAGS="$(CXXFLAGS)"
CONFIGURE_SWITCHES = --prefix=/usr \
                     --localstatedir=/var \
                     --sysconfdir=/etc \
                     --libexecdir=/usr/lib \
                     --disable-rpath \
                     --with-berkeleydb=/usr \
                     --with-xqilla=/usr \
                     --with-xerces=/usr \
                     --with-zlib=/usr

version=$(shell expr `pwd` : '.*-\([0-9.]*\)')

%:
	dh $@ --sourcedir=dbxml

config.status:
	dh_testdir

	cd dbxml && $(CONFIGURE_VARS) && ./configure $(CONFIGURE_SWITCHES)

build: build-stamp
build-stamp: config.status
	dh_testdir

	cd dbxml && $(MAKE)

install: build
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs
	cd dbxml && $(MAKE) install prefix=$(CURDIR)/debian/tmp/usr

	# libdbxml-dbg
	mkdir -p debian/tmp/usr/lib/debug/usr/lib
	objcopy --only-keep-debug debian/tmp/usr/lib/libdbxml-2.5.so \
		debian/tmp/usr/lib/debug/usr/lib/libdbxml-2.5.so.debug

ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	strip --remove-section=.note --remove-section=.comment debian/tmp/usr/lib/libdbxml-2.5.so
endif

	objcopy --add-gnu-debuglink=debian/tmp/usr/lib/debug/usr/lib/libdbxml-2.5.so.debug \
		debian/tmp/usr/lib/libdbxml-2.5.so
	# /libdbxml-dbg

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
#	dh_installchangelogs ChangeLog
	dh_installdocs
	dh_install --sourcedir=debian/tmp
	dh_installman
	dh_link
	dh_strip -Xlibdbxml-2.5.so
	dh_fixperms
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
